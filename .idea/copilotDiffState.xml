<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/extensions/ReportExtension.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/extensions/ReportExtension.java" />
              <option name="originalContent" value="package extensions;&#10;&#10;import com.aventstack.extentreports.ExtentReports;&#10;import com.aventstack.extentreports.ExtentTest;&#10;import org.junit.jupiter.api.extension.*;&#10;import org.openqa.selenium.OutputType;&#10;import org.openqa.selenium.TakesScreenshot;&#10;import org.openqa.selenium.WebDriver;&#10;import utils.ReportManager;&#10;&#10;import java.io.File;&#10;import java.io.IOException;&#10;import java.nio.file.Files;&#10;import java.util.Optional;&#10;&#10;public class ReportExtension implements BeforeAllCallback, AfterAllCallback, TestWatcher {&#10;&#10;    public static ExtentReports extent;&#10;    public static ExtentTest test;&#10;&#10;&#10;&#10;    public void beforeTestExecution(ExtensionContext context) {&#10;        String testName = context.getDisplayName();&#10;        test = extent.createTest(testName);&#10;    }&#10;&#10;    @Override&#10;    public void beforeAll(ExtensionContext context) {&#10;        extent = ReportManager.getReporter();&#10;    }&#10;&#10;    @Override&#10;    public void afterAll(ExtensionContext context) {&#10;        extent.flush();&#10;    }&#10;&#10;    @Override&#10;    public void testFailed(ExtensionContext context, Throwable cause) {&#10;        if (test == null &amp;&amp; extent != null) {&#10;            test = extent.createTest(context.getDisplayName());&#10;        }&#10;        WebDriver driver = DriverExtension.getDriver();&#10;        String testName = context.getDisplayName();&#10;        attachScreenshot(driver, testName);&#10;        if (test != null) {&#10;            test.fail(&quot;טסט נכשל: &quot; + cause.getMessage());&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void testSuccessful(ExtensionContext context) {&#10;        if (test == null &amp;&amp; extent != null) {&#10;            test = extent.createTest(context.getDisplayName());&#10;        }&#10;        if (test != null) {&#10;            test.pass(&quot;עבר בהצלחה&quot;);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void testDisabled(ExtensionContext context, Optional&lt;String&gt; reason) {&#10;        if (test == null &amp;&amp; extent != null) {&#10;            test = extent.createTest(context.getDisplayName());&#10;        }&#10;        if (test != null) {&#10;            test.skip(&quot;הטסט נוטרל: &quot; + reason.orElse(&quot;לא צוינה סיבה&quot;));&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void testAborted(ExtensionContext context, Throwable cause) {&#10;        if (test == null &amp;&amp; extent != null) {&#10;            test = extent.createTest(context.getDisplayName());&#10;        }&#10;        if (test != null) {&#10;            test.skip(&quot;הטסט בוטל: &quot; + cause.getMessage());&#10;        }&#10;    }&#10;&#10;    public static void attachScreenshot(WebDriver driver, String name) {&#10;        if (driver == null) {&#10;            if (test != null) test.warning(&quot;לא ניתן לצלם מסך כי הדרייבר לא מאותחל&quot;);&#10;            return;&#10;        }&#10;        try {&#10;            File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);&#10;            String dirPath = &quot;screenshots/&quot;;&#10;            new File(dirPath).mkdirs(); // יוודא שהתיקייה קיימת&#10;            String path = dirPath + name + &quot;.png&quot;;&#10;            Files.copy(src.toPath(), new File(path).toPath());&#10;            test.addScreenCaptureFromPath(path);&#10;        } catch (IOException e) {&#10;            if (test != null) test.warning(&quot;שגיאה בצילום מסך: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    public static void startReport() {&#10;        extent = ReportManager.getReporter();&#10;    }&#10;&#10;    public static void endReport() {&#10;        if (extent != null) {&#10;            extent.flush();&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package extensions;&#10;&#10;import com.aventstack.extentreports.ExtentReports;&#10;import com.aventstack.extentreports.ExtentTest;&#10;import org.junit.jupiter.api.extension.*;&#10;import org.openqa.selenium.OutputType;&#10;import org.openqa.selenium.TakesScreenshot;&#10;import org.openqa.selenium.WebDriver;&#10;import utils.ReportManager;&#10;&#10;import java.io.File;&#10;import java.io.IOException;&#10;import java.nio.file.Files;&#10;import java.util.Optional;&#10;&#10;public class ReportExtension implements BeforeAllCallback, AfterAllCallback, TestWatcher {&#10;    private static ExtentReports extent;&#10;    private static final ExtensionContext.Namespace NAMESPACE = ExtensionContext.Namespace.create(ReportExtension.class);&#10;&#10;    @Override&#10;    public void beforeAll(ExtensionContext context) {&#10;        extent = ReportManager.getReporter();&#10;        context.getStore(NAMESPACE).put(&quot;extent&quot;, extent);&#10;    }&#10;&#10;    @Override&#10;    public void afterAll(ExtensionContext context) {&#10;        ExtentReports ext = (ExtentReports) context.getStore(NAMESPACE).get(&quot;extent&quot;, ExtentReports.class);&#10;        if (ext != null) ext.flush();&#10;    }&#10;&#10;    @Override&#10;    public void testFailed(ExtensionContext context, Throwable cause) {&#10;        ExtentTest test = getOrCreateTest(context);&#10;        WebDriver driver = extensions.DriverExtension.getDriver(context);&#10;        attachScreenshot(driver, context.getDisplayName(), test);&#10;        test.fail(&quot;טסט נכשל: &quot; + cause.getMessage());&#10;    }&#10;&#10;    @Override&#10;    public void testSuccessful(ExtensionContext context) {&#10;        ExtentTest test = getOrCreateTest(context);&#10;        test.pass(&quot;עבר בהצלחה&quot;);&#10;    }&#10;&#10;    @Override&#10;    public void testDisabled(ExtensionContext context, Optional&lt;String&gt; reason) {&#10;        ExtentTest test = getOrCreateTest(context);&#10;        test.skip(&quot;הטסט נוטרל: &quot; + reason.orElse(&quot;לא צוינה סיבה&quot;));&#10;    }&#10;&#10;    @Override&#10;    public void testAborted(ExtensionContext context, Throwable cause) {&#10;        ExtentTest test = getOrCreateTest(context);&#10;        test.skip(&quot;הטסט בוטל: &quot; + cause.getMessage());&#10;    }&#10;&#10;    private ExtentTest getOrCreateTest(ExtensionContext context) {&#10;        ExtentTest test = (ExtentTest) context.getStore(NAMESPACE).get(context.getDisplayName(), ExtentTest.class);&#10;        if (test == null) {&#10;            ExtentReports ext = (ExtentReports) context.getStore(NAMESPACE).get(&quot;extent&quot;, ExtentReports.class);&#10;            if (ext == null) ext = extent;&#10;            test = ext.createTest(context.getDisplayName());&#10;            context.getStore(NAMESPACE).put(context.getDisplayName(), test);&#10;        }&#10;        return test;&#10;    }&#10;&#10;    private void attachScreenshot(WebDriver driver, String name, ExtentTest test) {&#10;        if (driver == null) {&#10;            test.warning(&quot;לא ניתן לצלם מסך כי הדרייבר לא מאותחל&quot;);&#10;            return;&#10;        }&#10;        try {&#10;            File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);&#10;            String dirPath = &quot;screenshots/&quot;;&#10;            new File(dirPath).mkdirs();&#10;            String path = dirPath + name + &quot;.png&quot;;&#10;            Files.copy(src.toPath(), new File(path).toPath());&#10;            test.addScreenCaptureFromPath(path);&#10;        } catch (IOException e) {&#10;            test.warning(&quot;שגיאה בצילום מסך: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>